plugins {
    id 'org.springframework.boot' version '2.1.6.RELEASE'
    id 'java'
    id 'org.liquibase.gradle' version '2.0.1'
    id 'io.spring.dependency-management' version "1.0.8.RELEASE"
    id 'nu.studer.jooq' version '3.0.3'
}


group = 'com.accenture'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
}



dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-jooq'
    implementation("org.springframework.boot:spring-boot-starter-data-jpa")
    implementation 'org.liquibase:liquibase-core'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    compile 'com.h2database:h2:1.4.199'
    jooqRuntime 'com.h2database:h2:1.4.199'
    compile 'org.jooq:jooq'


    implementation 'org.springframework.kafka:spring-kafka'
    testImplementation 'org.springframework.kafka:spring-kafka-test'

}
jooq {
    sample(sourceSets.main) {
        jdbc {
            driver = 'org.h2.Driver'
            url = 'jdbc:h2:./src/main/resources/db/db2'
            user = 'h2'
            password = 'h2'
        }
        generator {
            name = 'org.jooq.codegen.DefaultGenerator'
            strategy {
                name = 'org.jooq.codegen.DefaultGeneratorStrategy'
            }
            database {
                name = 'org.jooq.meta.h2.H2Database'
                excludes = 'DATABASECHANGELOG|DATABASECHANGELOGLOCK'
                inputSchema = 'PUBLIC'
            }
            generate {
                pojos = true
                daos = true
            }
        }
    }
}

